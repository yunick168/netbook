{"version":3,"sources":["components/Form.js","components/Search.js","components/Header.js","components/Tasks.js","components/Options.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onAddTask","useState","text","setText","date","setDate","time","setTime","reminder","setReminder","newDate","Date","getMonth","today","getFullYear","getDate","className","onSubmit","e","preventDefault","alert","type","onChange","target","value","min","checked","Search","keywordHandle","Header","onToggleFrom","formBoolean","onSearchForm","searchBoolean","onClick","Tasks","onLoadedData","ontoggleReminder","onDelBtn","onDeleteHandle","map","data","onDoubleClick","id","Options","onReminderSort","onDateSort","onClearData","onShowDelete","App","setData","delBtn","setDelBtn","setFormBoolean","setSearchBoolean","keywordBoolean","setKeywordBoolean","searchDate","setSearchDate","task","getTime","length","slice","replace","searchText","dateFilter","filter","match","sort","a","b","aDate","bDate","aTime","bTime","aNum","bNum","window","confirm","dataFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57b81ebd.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport '../scss/Form.scss'\r\n\r\nconst Form = ({onAddTask}) => {\r\n  const [text,setText] = useState('')\r\n  const [date,setDate] = useState('')\r\n  const [time,setTime] = useState('')\r\n  const [reminder,setReminder] = useState(false)\r\n\r\n  const onSubmit = (e)=> {\r\n    e.preventDefault()\r\n    if(!text){\r\n      alert('請輸入記事內容')\r\n      return\r\n    }\r\n    if(!date || !time){\r\n      if(!date && !time){\r\n        alert('請輸入日期 & 時間')\r\n        return\r\n      }\r\n      !date ? alert('請輸入日期') : alert('請輸入時間')\r\n      return\r\n    }\r\n    onAddTask({text,date,time,reminder})\r\n    setText('');setDate('');setTime('');setReminder(false)\r\n  }\r\n\r\n  const newDate = new Date()\r\n  const getMonth = newDate.getMonth() + 1\r\n  const today = `${newDate.getFullYear()}-${ getMonth <= 9 ? '0'+getMonth : getMonth}-${newDate.getDate()}`\r\n\r\n  return (\r\n    <form className=\"add-tack-from\" onSubmit={onSubmit}>\r\n      <div>\r\n        <label>記事內容</label>\r\n        <input type=\"text\" onChange={(e) => setText(e.target.value)} value={text}/>\r\n      </div>\r\n      <div className=\"add-time-wrap\">\r\n        <label>日期 & 時間</label>\r\n        <div>\r\n          <input type=\"date\" onChange={(e) => setDate(e.target.value)} value={date} min={today}/>\r\n          <input type=\"time\" onChange={(e) => setTime(e.target.value)} value={time}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"add-reminder-wrap\">\r\n        <label>設定提醒</label>\r\n        <input type=\"checkbox\" onChange={(e) => setReminder(e.target.checked)} value={reminder} checked={reminder}/>\r\n      </div>\r\n      <button type=\"submit\" className=\"add-task-btn\">上傳檔案</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { useState } from 'react'\r\nimport '../scss/Search.scss'\r\n\r\nconst Search = ({keywordHandle}) => {\r\n  let [text,setText] = useState('')\r\n\r\n  const keyword = (e) =>{\r\n    e.preventDefault()\r\n    keywordHandle(text)\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={keyword} className=\"search\">\r\n      <label>搜尋關鍵字 </label>\r\n      <div>\r\n        <input onChange={(e) => setText(e.target.value)} type=\"text\" value={text} />\r\n        <button type=\"submit\">搜尋</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import Form from './Form'\r\nimport Search from './Search'\r\nimport '../scss/Header.scss'\r\n\r\n\r\nconst Header = ({ onAddTask, onToggleFrom, formBoolean,onSearchForm,searchBoolean,keywordHandle}) => {\r\n  return (\r\n    <header>\r\n      <div className=\"title-wrap\">\r\n        <h1>React Netbook</h1>\r\n        <div>\r\n          <button className=\"search-btn\" onClick={onSearchForm} > {searchBoolean ? <i className=\"fas fa-times\"></i> : <i className=\"fas fa-search\"></i>}</button>\r\n          <button className=\"add-btn\" onClick={onToggleFrom}> {formBoolean ? '關閉' : '新增'}</button>\r\n        </div>\r\n      </div>\r\n      \r\n      {formBoolean ? <Form onAddTask={onAddTask} /> : ''}\r\n      {searchBoolean ? <Search keywordHandle={keywordHandle}/> : ''}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import '../scss/Tasks.scss'\r\n\r\nconst Tasks = ({onLoadedData,ontoggleReminder,onDelBtn,onDeleteHandle}) => {\r\n  return (\r\n    <ul className=\"tasks\">\r\n      {onLoadedData.map(data =>\r\n        <li key={data.id} onDoubleClick={() => ontoggleReminder(data)}>\r\n          <p>{data.reminder ? <span>*</span> : ''} {data.text}</p>\r\n          <div>\r\n            <p>{data.date}</p>\r\n            <p>{data.time} {onDelBtn ? <button onClick={() => onDeleteHandle(data.id)}><i className=\"fas fa-trash\"></i></button> : ''}</p>\r\n          </div>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import '../scss/Options.scss'\r\n\r\nconst Options = ({onReminderSort,onDateSort,onClearData,onShowDelete}) => {\r\n  return (\r\n    <div className=\"options\">\r\n      <button onClick={onReminderSort}><i className=\"fas fa-bell\"></i>提醒向上</button>\r\n      <button onClick={onDateSort}><i className=\"far fa-calendar-alt\"></i>時間(小~大)</button>\r\n      <button onClick={onClearData}><i className=\"fas fa-broom\"></i>清除</button>\r\n      <button onClick={onShowDelete}><i className=\"far fa-trash-alt\"></i>垃圾桶</button>\r\n    </div>\r\n  )\r\n}\r\nexport default Options\r\n","import { useState } from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport Options from './components/Options'\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState(\r\n    [\r\n      {\r\n        id: 1,\r\n        text: '到醫院看牙醫',\r\n        date: '2021/06/05',\r\n        time: '14:00 Pm',\r\n        reminder: true\r\n      },\r\n      {\r\n        id: 2,\r\n        text: '玩遊戲',\r\n        date: '2021/06/18',\r\n        time: '5:00 Am',\r\n        reminder: false\r\n      },\r\n      {\r\n        id: 3,\r\n        text: '畢業',\r\n        date: '2021/06/30',\r\n        time: '16:00 Pm',\r\n        reminder: true\r\n      }\r\n    ]\r\n  )\r\n  //add task\r\n  const addTask = (task) => {\r\n    // setData(...data,task)\r\n    task.id = new Date().getTime() + data.length\r\n    task.time = task.time.slice(0,2) >= 12 ? task.time + ' Pm' : task.time.slice(1) + ' Am'\r\n    task.date = task.date.replace(/-/g,'/')\r\n    setData([...data,task])\r\n  }\r\n  // add reminder \r\n  const toggleReminder = (e) => {\r\n    e.reminder = !e.reminder\r\n    setData([...data])\r\n  }\r\n  //reminder sort\r\n  const reminderSort = () => {\r\n    let reminder = data.sort((a,b) =>\r\n      b.reminder - a.reminder\r\n    )\r\n    setData([...data],reminder)\r\n  }\r\n  //Date sort\r\n  const dateSort = () => {\r\n    let date = data.sort((a,b) => {\r\n\r\n      let aDate = a.date.replace(/\\//g,'')\r\n      let bDate = b.date.replace(/\\//g,'')\r\n\r\n      let aTime = a.time.replace(/[^0-9]/ig,'') < 1000 ? '0'+a.time.replace(/[^0-9]/ig,'') : a.time.replace(/[^0-9]/ig,'')\r\n      let bTime = b.time.replace(/[^0-9]/ig,'') < 1000 ? '0'+b.time.replace(/[^0-9]/ig,'') : b.time.replace(/[^0-9]/ig,'')\r\n\r\n      let aNum = `${aDate}${aTime}`\r\n      let bNum = `${bDate}${bTime}`\r\n\r\n      return bNum < aNum ? 1 : bNum > aNum ? -1 : 0\r\n    })\r\n    setData([...data],date)\r\n  }\r\n  //clear all\r\n  const clearData = () => {\r\n    if(window.confirm('確定要清除嗎')){\r\n      setData([])\r\n    }\r\n  }\r\n  //show delete btn\r\n  const [delBtn,setDelBtn] = useState(false)\r\n  const showDelete = () => {\r\n    setDelBtn(!delBtn)\r\n  }\r\n  //delete task\r\n  const deleteHandle = (id) => {\r\n    let dataFilter = data.filter(task => task.id !== id)\r\n    setData(dataFilter)\r\n  }\r\n  //toggle form\r\n  const [formBoolean,setFormBoolean] = useState(false)\r\n  const toggleForm = () => {\r\n    setFormBoolean(!formBoolean)\r\n    setSearchBoolean(false)\r\n    setKeywordBoolean(true)\r\n  }\r\n  //toggle search \r\n  const [searchBoolean,setSearchBoolean] = useState(false)\r\n  const searchForm = () =>{\r\n    setSearchBoolean(!searchBoolean)\r\n    setFormBoolean(false)\r\n    setKeywordBoolean(!keywordBoolean)\r\n    setSearchDate([])\r\n  }\r\n  //search keyword\r\n  const [keywordBoolean,setKeywordBoolean] = useState(true)\r\n  const [searchDate,setSearchDate] = useState([])\r\n\r\n  const keywordHandle = (e) =>{\r\n    let searchText = e\r\n    if(e !== ''){\r\n      let dateFilter = data.filter((task =>\r\n        task.text.match(searchText)   \r\n      ))\r\n      setKeywordBoolean(false)\r\n      setSearchDate(dateFilter)\r\n    }else{\r\n      alert('搜尋資料不可空白')\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"app container\">\r\n\r\n      <Header \r\n        onAddTask={addTask} \r\n        onToggleFrom={toggleForm} formBoolean={formBoolean} \r\n        onSearchForm={searchForm} searchBoolean={searchBoolean}\r\n        keywordHandle={keywordHandle}\r\n      />\r\n\r\n      <Options \r\n        onReminderSort={reminderSort} \r\n        onDateSort={dateSort} \r\n        onClearData={clearData} \r\n        onShowDelete={showDelete}\r\n      />\r\n      {data.length === 0 ? <div className=\"noting-tasks\"><h3>* 無項目資料 *</h3></div> :\r\n        <Tasks \r\n        onLoadedData={keywordBoolean ? data : searchDate} \r\n        ontoggleReminder={toggleReminder} \r\n        onDelBtn={delBtn} \r\n        onDeleteHandle={deleteHandle}/>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}